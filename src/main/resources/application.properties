# Spring Boot项目中存在大量的配置，此外还内置了一个习惯性的配置，让你无需手动进行配置
# Spring Boot使用了一个全局的配置文件application.properties，放在src/main/resources目录下或者类路径的/config下
# Sping Boot的全局配置文件的作用是对一些默认配置的配置值进行修改。


# server可以指定springboot内嵌容器启动的端口，默认使用tomcat容器时在8080端口，当server.port=0时，表示自动扫面获取一个可用的端口。
server.port=10101
# log
logging.config=classpath:logback-spring.xml

application.name=@project.name@
application.version=@project.version@

spring.application.name=${application.name}


# datasource
# spring数据源的配置，使用jdbcTemplate进行数据库操作，引入spring-boot-starter-jdbc自动集成
spring.datasource.url = jdbc:mysql://localhost:3306/decoration?characterEncoding=utf-8&useSSL=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username = root
spring.datasource.password = 123456

# Advanced configuration...
spring.datasource.max-active=100
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=true
spring.datasource.test-on-return=true
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis= 1800000
spring.datasource.min-evictable-idle-time-millis= 1800000

#sql语句日志、DDL 模式、hibernate方言、命名策略的全限定类名、要操作的目标数据库
#JPA-Hibernate
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.dialect= 'org.hibernate.dialect.MySQL5Dialect  '
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.hibernate.id.new_generator_mappings=true
#spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.database = MYSQL

